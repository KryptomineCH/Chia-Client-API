<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net8.0;net6.0</TargetFrameworks>
    <RootNamespace>Chia_Client_API</RootNamespace>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>Chia client api to interact with the chia client</Title>
    <Version>2.2.0.7</Version>
    <Authors>KryptoMine.ch, Julian Bechtold</Authors>
    <Company>KryptoMine.ch</Company>
    <Description>CHIA-RPC is a C# Nuget library that allows developers to easily communicate with the Chia client. It provides a wrapper for making requests, sending transactions, and minting, making it a versatile tool for interacting with the Chia blockchain. With CHIA-RPC, you can easily integrate Chia functionality into your C# projects.</Description>
    <Copyright>KryptoMine.ch</Copyright>
    <PackageProjectUrl>https://github.com/KryptomineCH/Chia-Client-API</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/KryptomineCH/Chia-Client-API</RepositoryUrl>
    <PackageTags>Chia;Blockchain;API;C#;.NET;NuGet;Cryptocurrency;Client;Wrapper;Transactions;HTTP;JSON;REST;Communication;Library;Websocket;XCH</PackageTags>
    <PackageReleaseNotes>2.2.0.X
- Fix Mempool related objects for get_all_mempool_items
- Add Custom Property FeePerCost to Mempool Item
- Update Block RPC
- Add implicit conversions from block record to header hash
- Fix response raw content
- Add fee_xch to Mempool item

2.2.0
- Implement Datalayer get_proof
- implement Datalayer verify_proof
- implement get_aggsig_additional_data
- add custom DustSmallCoins function which can clean a wallet and combine small coins
- add implicit conversion to GetSpendableCoins_RPC
- removed parameter from nft_nft_get_nfts according to documentation update
- removed Transaction History References which are for another branch
- added GetSortedCoins to GetSpendableCoins_Response
- added GetSortedCoins to GetSpendableCoins_Response
- added Bech32 helperFunctions
- implemented and tested curtom coin merge functionality
- Reverse engineered, fixed and tested send_transaction_multi
- Reverse engineered and implemented custom function of coin_split, same as the cli command
- add support for .net 8

2.1.3
- removed ammount_correct_custom as it was a workaround for a bug in outgoing trades in previous chia versions
- Compatible with chia 2.1.2

2.1.1.10 - Critical BugFix
Critical:
fixed a bug where the client could not load the endpoint. Leaving the API Library unable to establish a connection to the Nodes.

Otner:
- update offer sort key
- fix index out of range exception with SeekBlockTransactionIndex
- update cert loading
- update offer sort key
- add Websocket implementation (only compatible with linux &lt; chia 2.1.2)
   requires tls 1.2 allowance in chia config for windows on chia &gt;= 2.1.2


2.1.1.9
- added workaround for amount in cat
- added AssetIDCache as utility class in chia_client_api.Helpers_NS useful if you need to look up asset ids often
- added information to offer summary if the offer will generate a separate fee transaction for the person accepting the offer
- added information to TradeRecord if this offer generates a separate fee transaction for you
- traderecord status is now the apropriate enum TradeStatus
- added implicit conversion from TransactionDict to WalletID_RPC
- added functionality to check if the file exists on disk due to extension
- added efficient hash comparing function to CHIA_RPC.HelperFunctions_NS.HashCompare
- added utility comparing operations to coin. ==, != and .Equals()
- GetCoinID() is now deprecated. Please use the property CoinName
- added comparison function for two coin arrays
- added transaction comparison 
- added implicit conversion from ulong to fingerprint_rpc
- added implicit operator for WalletID_RPC (ulong)
- added implicit operator for GetTransactions_RPC (walletID_RPC &amp; ulong)
- improved client endpoints error handling. They will no longer return a null value. Please check if bool success and string error
- Fixed Paths for Cross Plattform compatibility

2.1.1.8
(!) added a critical workaround for chia &lt;= 2.1.1 reporting incorrect amount in OUTGOING_TRADE transactions
use amount_correct_custom for now
see https://github.com/Chia-Network/chia-blockchain/issues/16842 for more details

2.1.1.7
- Updated GetAllOffers_RPC Documentation
- Updated get_all_offers sort_key type (string)
- Updated TradeRecord documentation with findings from offers
- Trade recod accepted_at_time can now be accessed through DateTime with accepted_at_time_dateTime
- NftCoinIdAndWalletId is noww a serializable object
- Format fix GetCoinRecords_Response documentation
- added offer summary and Asset info to offers (was dynamic object before)

2.1.1.6
- Updated Transactions documentation witn the caviats
- Removed obsolete marker with the now improved documentation for Get_Transaction and Get_Transactions

2.1.1.5
- Improved Documentation for GetTransactions_RPC
- Added jsonignore for offer_in_xch (because its a custom property)
- Updated GetTransactions Documentation
- Updated Transaction Documentation

2.1.1.4 Fix for error report function
- moved to asymetric aes encryption due to max data length of RSA

2.1.1.2
- Fixed an error where AwaitOfferToExecuteOrCancel gets stuck when called with an invalid offer
- Implemented Globalvar - packageVersion
- added opt-in error transmit feature improvement program. Transmitts error responses of the server in rsa4096 encrypted manner if opted in. More details in the parameter documentation
- typo corrections in WalletApi_wallet and WalletApi_WalletNode


2.1.1
- Improved nft documentation
- Added functionality to await until an offer is executed or cancalled/invaild
- Added implicit conversion for takeOffer RPC
- update AddOfferPosition (now supports cat and updated documentation)
- added a function to look up the wallet id of an nft in wallet client
- added functionality to await an nft transfer
- add SimpleTransfer_Async: one endpoint for standard chia, cat and nft transfers
- implemented daemon rpc endpoints
- Implemented Verifiable Credentials endpoints
- add clear_pending_roots endpoint according to documentation
- update unsubscribe documentation
- add dl wallet log in according to documentation
- implemented time-limited offers</PackageReleaseNotes>
    <PackageIcon>icon.png</PackageIcon>
    <PackageLicenseExpression> MIT-Modern-Variant</PackageLicenseExpression>
    <IncludeSymbols>False</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <ProduceReferenceAssembly>True</ProduceReferenceAssembly>
    <PackageOutputPath>Y:\Projects\Programmbibliotheken\LocalNugetPackages</PackageOutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugType>embedded</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DebugType>embedded</DebugType>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="encrypt.xml" />
    <None Remove="errorlog" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\icon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CHIA-RPC" Version="2.1.0.1" />
    <PackageReference Include="Multithreading_Library" Version="1.2.1" />
    <PackageReference Include="SSH.NET" Version="2023.0.0" />
    <PackageReference Include="System.Net.Http.Json" Version="7.0.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\CHIA-RPC\CHIA-RPC\CHIA-RPC.csproj" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="encrypt.xml" />
    <EmbeddedResource Include="errorlog" />
  </ItemGroup>

</Project>
